plugins {
    id 'java-library'
    id "io.freefair.lombok" version "6.0.0-m2"
    id 'io.qameta.allure' version '2.9.6'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.17.3",
    selenideVersion = "6.5.2",
    appiumVersion = "8.0.0",
    restAssured = "4.5.1",
    ownersVersion = "1.0.12",
    commonsIoVersion = "2.11.0",
    assertjVersion = "3.19.0",
    junitVersion = "5.8.2",
    slf4jVersion = "1.7.32",
    jacksonVersion = "2.11.2"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.22'
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.appium:java-client:$appiumVersion",
            "org.aeonbits.owner:owner:$ownersVersion",
            "commons-io:commons-io:$commonsIoVersion",
            "org.assertj:assertj-core:$assertjVersion",
            "io.rest-assured:rest-assured:$restAssured",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task mobile(type: Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform {
        includeTags 'mobile'
    }
}
task web(type: Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform {
        includeTags 'web'
    }
}
task api(type: Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform {
        includeTags 'api'
    }
}
task allTests(type: Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform {
        includeTags 'allTests'
    }
}

